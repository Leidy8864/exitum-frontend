"use strict";var precacheConfig=[["/index.html","844cf28fe57f8d8a0bd96e89f6257d05"],["/static/css/main.eafcc235.css","62492c14596cda5472d203ccd62c3d6c"],["/static/js/main.ed0a47c3.js","1b79773c58e6b4d01d6e3a137ab22992"],["/static/media/Asistentesigno.b175fa7f.svg","b175fa7fdff276f27660015ec94a7c55"],["/static/media/Fresita.93f3759d.svg","93f3759d70dae50cedc995fafabdd8f2"],["/static/media/Fresitas.bc731471.svg","bc73147184fa818b37e20dc8ce640018"],["/static/media/WorkSans-Regular.740b8e9a.ttf","740b8e9adcb998d4f65b3b18251fb5e2"],["/static/media/agregar-boton.54ceaa07.svg","54ceaa07c883046fb4bd72048b8a8d20"],["/static/media/alert-icon.f91f975d.svg","f91f975d831de7e97502745e3943f884"],["/static/media/asistente_emprendedor.3215af09.svg","3215af090c6555c766178ba09706cec2"],["/static/media/asistente_impulsor.93f3759d.svg","93f3759d70dae50cedc995fafabdd8f2"],["/static/media/boton-de-eliminacion-del-contenedor-de-basuras.6b787da3.svg","6b787da3c869e7a99189c0c145a326ef"],["/static/media/boton-de-pausa.fa9d206d.svg","fa9d206dea70012d27e440dc081a6d37"],["/static/media/boton-de-reproduccion.fc91988c.svg","fc91988cb26560607baca9de79024f40"],["/static/media/capsule.91dcde18.svg","91dcde185b4943946876ab020c0102e9"],["/static/media/chikorita.ad88856d.png","ad88856d5e1ccb61709d00b55f677921"],["/static/media/circle-small.e4648769.svg","e464876977a8c8fce3bf8bbf0eb00b1a"],["/static/media/circle.2dfc249d.svg","2dfc249d4d8bf73d098089af002906cd"],["/static/media/delete_.1dca1cc3.svg","1dca1cc3be8a25d351dc812f24e37413"],["/static/media/empleo.ecfa0bdb.svg","ecfa0bdbcf1e1ce95aa17e0df5f075af"],["/static/media/flecha-hacia-abajo.84ee6d0f.svg","84ee6d0fd4bb234f3db5098d3797eefe"],["/static/media/idea.637b2248.svg","637b224817114c173a7cfb92b76ffec5"],["/static/media/lapiz.80da57be.svg","80da57be076302bf1822abfe32b9f1a8"],["/static/media/logo-azul.383b766a.svg","383b766a4815ac48c9647075ce67ef56"],["/static/media/logo-blanco.43d70ed3.svg","43d70ed33bd921ef767937767fadc149"],["/static/media/proyecto.03557c98.svg","03557c9861c5da9206581b9acb7107e5"],["/static/media/rectangle-small.7cfe8aa5.svg","7cfe8aa56ea0fd626a736a3d0959c6ab"],["/static/media/rectangle.49a378c3.svg","49a378c324de9a43c253cc9791678d09"],["/static/media/square-small.84bc2646.svg","84bc264629448b7593bb0ba237d431e2"],["/static/media/square.ddd40a00.svg","ddd40a000650080de8c820f8f2fb143f"],["/static/media/user_.779c5837.svg","779c58374cb1d57223e24583e44001ce"],["/static/media/verify.2ae32ecc.png","2ae32ecce0802b428eacef772089b4a3"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,c){var s=new URL(e);return c&&s.pathname.match(c)||(s.search+=(s.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),s.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],c=new URL(a,self.location),s=createCacheKey(c,hashParamName,t,/\.\w{8}\./);return[c.toString(),s]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,c),e=urlsToCacheKeys.has(t));var s="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(s,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});